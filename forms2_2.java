/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Login;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.regex.*;
import java.awt.event.*;
import java.beans.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.JFrame;
import javax.swing.JTextField;
/**
 *
 * @author jagab
 */
public class forms2_2 extends javax.swing.JFrame {
    Connection con;
    ResultSet rs;
    ResultSet rs1;
    PreparedStatement pst;
    PreparedStatement pst1;
    String sql;
    String sql1;
    String eno;
    private String OptionPane;
    private String rno;
    

    /**
     * Creates new form forms2_2
     */
    public forms2_2() {
        initComponents();
        combo();
        eno="";
        this.setLocationRelativeTo(null);
        try {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            con = DriverManager.getConnection("jdbc:ucanaccess://D:\\PROJECT\\Login1\\Database12.accdb");
                txtname.setText("");
                txteno.setText("");
                txtcourse.setSelectedIndex(0);
                fees1.setText("");
                txtcash.setSelected(true);
                txtcard.setSelected(false);
                txtcheque.setSelected(false);
                txtupdate.setVisible(true);
                //txtdelete2.setVisible(true);
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            
        } catch (ClassNotFoundException ex) {
        }catch(SQLException ex){
        }
    }
    
    public void combo(){
    try{
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            con = DriverManager.getConnection("jdbc:ucanaccess://D:\\PROJECT\\Login1\\Database12.accdb");
            String sql="select * from COURSE_MASTER";
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next()){
                String name=rs.getString("COURSE_NAME");
                txtcourse.addItem(name);
            }
    }
    catch(Exception e){
        e.printStackTrace();
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        fees = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtupdate = new javax.swing.JButton();
        l3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtmin = new javax.swing.JLabel();
        txtclose = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txteno = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtcourse = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        fees1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtcash = new javax.swing.JRadioButton();
        txtcheque = new javax.swing.JRadioButton();
        txtcard = new javax.swing.JRadioButton();
        txtupdate1 = new javax.swing.JButton();
        txtback = new javax.swing.JButton();
        l4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("E.No");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Name");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Course");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Fees");

        fees.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        fees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feesActionPerformed(evt);
            }
        });
        fees.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                feesKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                feesKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Payment Mode");

        txtupdate.setBackground(new java.awt.Color(255, 204, 51));
        txtupdate.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtupdate.setText("Update");
        txtupdate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtupdateFocusGained(evt);
            }
        });
        txtupdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtupdateMouseClicked(evt);
            }
        });
        txtupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtupdateActionPerformed(evt);
            }
        });
        txtupdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtupdateKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtupdateKeyTyped(evt);
            }
        });

        l3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        l3.setForeground(new java.awt.Color(255, 255, 255));
        l3.setText("click here to move to Login Page...");
        l3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l3MouseClicked(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 55)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("STUDENT INFO MANAGEMENT SYSTEM");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 1110, 39));

        txtmin.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        txtmin.setForeground(new java.awt.Color(255, 255, 255));
        txtmin.setText("-");
        txtmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtminMouseClicked(evt);
            }
        });
        getContentPane().add(txtmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 10, 20, 20));

        txtclose.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtclose.setForeground(new java.awt.Color(255, 255, 255));
        txtclose.setText("X");
        txtclose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtcloseMouseClicked(evt);
            }
        });
        getContentPane().add(txtclose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 10, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("E.No");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, -1, -1));

        txteno.setBackground(new java.awt.Color(204, 204, 204));
        txteno.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        txteno.setEnabled(false);
        txteno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtenoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtenoMousePressed(evt);
            }
        });
        txteno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtenoActionPerformed(evt);
            }
        });
        txteno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtenoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtenoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtenoKeyTyped(evt);
            }
        });
        getContentPane().add(txteno, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 130, 321, 47));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Name");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 220, -1, -1));

        txtname.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });
        txtname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnameKeyTyped(evt);
            }
        });
        getContentPane().add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 210, 320, 50));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Course");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 290, -1, -1));

        txtcourse.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        txtcourse.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                txtcoursePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        txtcourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcourseActionPerformed(evt);
            }
        });
        txtcourse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcourseKeyPressed(evt);
            }
        });
        getContentPane().add(txtcourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 300, 320, 50));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Fees");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 360, -1, 41));

        fees1.setBackground(new java.awt.Color(204, 204, 204));
        fees1.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        fees1.setEnabled(false);
        fees1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fees1MousePressed(evt);
            }
        });
        fees1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fees1ActionPerformed(evt);
            }
        });
        fees1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fees1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fees1KeyTyped(evt);
            }
        });
        getContentPane().add(fees1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 380, 320, 50));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Payment Mode");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 450, -1, 41));

        txtcash.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtcash.setForeground(new java.awt.Color(255, 255, 255));
        txtcash.setSelected(true);
        txtcash.setText("Cash");
        txtcash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcashActionPerformed(evt);
            }
        });
        txtcash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcashKeyPressed(evt);
            }
        });
        getContentPane().add(txtcash, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 460, -1, -1));

        txtcheque.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtcheque.setForeground(new java.awt.Color(255, 255, 255));
        txtcheque.setText("Cheque");
        txtcheque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtchequeActionPerformed(evt);
            }
        });
        txtcheque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtchequeKeyPressed(evt);
            }
        });
        getContentPane().add(txtcheque, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 460, -1, -1));

        txtcard.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtcard.setForeground(new java.awt.Color(255, 255, 255));
        txtcard.setText("Card");
        txtcard.setToolTipText("");
        txtcard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcardActionPerformed(evt);
            }
        });
        txtcard.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcardKeyPressed(evt);
            }
        });
        getContentPane().add(txtcard, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 460, -1, -1));

        txtupdate1.setBackground(new java.awt.Color(255, 204, 51));
        txtupdate1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtupdate1.setText("Update");
        txtupdate1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtupdate1FocusGained(evt);
            }
        });
        txtupdate1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtupdate1MouseClicked(evt);
            }
        });
        txtupdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtupdate1ActionPerformed(evt);
            }
        });
        txtupdate1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtupdate1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtupdate1KeyTyped(evt);
            }
        });
        getContentPane().add(txtupdate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 550, 150, 79));

        txtback.setBackground(new java.awt.Color(255, 204, 51));
        txtback.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtback.setText("Back");
        txtback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbackActionPerformed(evt);
            }
        });
        getContentPane().add(txtback, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 550, 149, 79));

        l4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        l4.setForeground(new java.awt.Color(255, 255, 255));
        l4.setText("click here to move to Login Page...");
        l4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l4MouseClicked(evt);
            }
        });
        getContentPane().add(l4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 660, 368, 26));

        jButton1.setBackground(new java.awt.Color(255, 204, 51));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton1.setText("Quit");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 550, 150, 80));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sdbs9.jpg"))); // NOI18N
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtminMouseClicked
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_txtminMouseClicked

    private void txtcloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtcloseMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_txtcloseMouseClicked

    private void txtenoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtenoMouseClicked
        // TODO add your handling code here:
        /*if(txtmodify.isEnabled()){
            txteno.setEditable(false);
        }
        else if(txtadd.isEnabled()){
            txteno.setEditable(true);
        }*/
    }//GEN-LAST:event_txtenoMouseClicked

    private void txtenoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtenoMousePressed
        // TODO add your handling code here:
        if(txteno.isRequestFocusEnabled()){
            JOptionPane.showMessageDialog(this,"Enrollment Number cannot be edited");
        }
    }//GEN-LAST:event_txtenoMousePressed

    private void txtenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtenoActionPerformed
        // TODO add your handling code here:
        txteno=new JTextField();
        txteno.setText("23456");
    }//GEN-LAST:event_txtenoActionPerformed

    private void txtenoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtenoKeyPressed
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            if(txteno.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Values cannot be edited in this field");
            }
            else{
                txtname.requestFocus();
            }
        }
    }//GEN-LAST:event_txtenoKeyPressed

    private void txtenoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtenoKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[0-9]{0,5}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(txteno.getText());
        if(!match.matches()){
            JOptionPane.showMessageDialog(this, "Enrollment Number is only 5 numbers");
        }
    }//GEN-LAST:event_txtenoKeyReleased

    private void txtenoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtenoKeyTyped
        // TODO add your handling code here:
        /*char c = evt.getKeyChar();

        if(!(Character.isDigit(c)||Character.isISOControl(c))){
            JOptionPane.showMessageDialog(null,"Only Numbers are Accepted");
            getToolkit().beep();
            evt.consume();
        }*/
        /*if(txteno.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Values cannot be edited in this field");
        }*/
        char c = evt.getKeyChar();

        if(!(Character.isISOControl(c))){
            JOptionPane.showMessageDialog(null,"Only Numbers are Accepted");
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtenoKeyTyped

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void txtnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            if(txtname.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Name needed to be filled");
            }
            else{
                txtcourse.requestFocus();
            }
        }
        //code for name textfield that accepts letter, whitespace and delete and backspace key only
        char c=evt.getKeyChar();
        //ISO control for edit operation(delete key and backspace key is allowed)
        if(!(Character.isLetter(c)||Character.isWhitespace(c)||Character.isISOControl(c))){
            JOptionPane.showMessageDialog(null,"Only Alphabets are Accepted");
            getToolkit().beep();
            txtname.setEditable(false);
        }
        else{
            txtname.setEditable(true);
        }
    }//GEN-LAST:event_txtnameKeyPressed

    private void txtnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyReleased
        // TODO add your handling code here:
        int position=txtname.getCaretPosition();
        txtname.setText(txtname.getText().toUpperCase());
        txtname.setCaretPosition(position);
    }//GEN-LAST:event_txtnameKeyReleased

    private void txtnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        //ISO control for edit operation(delete key and backspace key is allowed)
        if(!(Character.isLetter(c)||Character.isWhitespace(c)||Character.isISOControl(c))){
            JOptionPane.showMessageDialog(null,"Only Alphabets are Accepted");
            getToolkit().beep();
            txtname.setEditable(false);
        }
        else{
            txtname.setEditable(true);
        }
    }//GEN-LAST:event_txtnameKeyTyped

    private void txtcourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcourseActionPerformed
        /* try {   // TODO add your handling code here:
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            con = DriverManager.getConnection("jdbc:ucanaccess://D:\\PROJECT\\Login1\\Database12.accdb");
            String sql1="select * from Course_Master where Course_Name='"+txtcourse.getSelectedItem()+"'";
            pst1 = con.prepareStatement(sql1);
            rs1 = pst1.executeQuery();
            PreparedStatement pst = con.createStatement();
            rs= pst.executeQuery("select * from Course_Master");
            while(rs.next()){
                String Name=rs.getString("Course_Name");
                txtcourse.addItem("Name");
            }
            con.close();

        } catch(Exception e){

        }*/
    }//GEN-LAST:event_txtcourseActionPerformed

    private void txtcourseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcourseKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            if(txtcourse.getSelectedItem().equals("")){
                JOptionPane.showMessageDialog(this,"Fees needed to be filled");
            }
            else{
                fees.requestFocus();
            }
        }
    }//GEN-LAST:event_txtcourseKeyPressed

    private void feesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feesActionPerformed

    private void feesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_feesKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            if(fees.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Fees needed to be filled");
            }
            else{
                txtcash.requestFocus();
                txtcard.requestFocus();
                txtcheque.requestFocus();
            }
        }
    }//GEN-LAST:event_feesKeyPressed

    private void feesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_feesKeyTyped
        // TODO add your handling code here:
        if(fees.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Fees needed to be filled");
        }
        char c = evt.getKeyChar();

        if(!(Character.isISOControl(c))){
            JOptionPane.showMessageDialog(null,"Only Numbers are Accepted");
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_feesKeyTyped

    private void fees1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fees1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fees1ActionPerformed

    private void fees1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fees1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            if(fees1.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Fees cannot be edited in this field");
            }
            else{
                txtcash.requestFocus();
                txtcard.requestFocus();
                txtcheque.requestFocus();
            }
        }
    }//GEN-LAST:event_fees1KeyPressed

    private void fees1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fees1KeyTyped
        // TODO add your handling code here:
       char c = evt.getKeyChar();

        if(!(Character.isDigit(c)||Character.isISOControl(c))){
            JOptionPane.showMessageDialog(null,"Only Numbers are Accepted");
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_fees1KeyTyped

    private void txtcashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcashActionPerformed
        // TODO add your handling code here
        if(txtcash.isSelected()){
            txtcard.setSelected(false);
            txtcheque.setSelected(false);
        }
    }//GEN-LAST:event_txtcashActionPerformed

    private void txtcashKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcashKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            txtupdate.requestFocus();
        }
    }//GEN-LAST:event_txtcashKeyPressed

    private void txtchequeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtchequeActionPerformed
        // TODO add your handling code here:
        if(txtcheque.isSelected()){
            txtcash.setSelected(false);
            txtcard.setSelected(false);
        }
    }//GEN-LAST:event_txtchequeActionPerformed

    private void txtchequeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtchequeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            txtupdate.requestFocus();
        }
    }//GEN-LAST:event_txtchequeKeyPressed

    private void txtcardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcardActionPerformed
        // TODO add your handling code here:
        if(txtcard.isSelected()){
            txtcash.setSelected(false);
            txtcheque.setSelected(false);
        }
    }//GEN-LAST:event_txtcardActionPerformed

    private void txtcardKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcardKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            txtupdate.requestFocus();
        }
    }//GEN-LAST:event_txtcardKeyPressed

    private void txtupdateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtupdateFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtupdateFocusGained

    private void txtupdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtupdateMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtupdateMouseClicked

    private void txtupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtupdateActionPerformed
        // TODO add your handling code here:
        try {
            boolean b=false;
            if(txteno.getText().equals("")){
                b=false;
                JOptionPane.showMessageDialog(null,"Kindly enter the student eno");
                txteno.requestFocus();
            }
            else if(txtname.getText().equals("")){
                b=false;
                JOptionPane.showMessageDialog(null,"Kindly enter the student name");
                txtname.requestFocus();
            }
            else if(txtcourse.getSelectedItem().equals("")){
                b=false;
                JOptionPane.showMessageDialog(this,"Kindly enter the opted course");
                txtcourse.requestFocus();
            }
            else if(fees1.getText().equals("")){
                b=false;
                JOptionPane.showMessageDialog(null,"Kindly enter the fees of the opted course");
                fees1.requestFocus();
            }
            else{
                //String s = JOptionPane.showInputDialog(this,"Enter eno for search");
                int response = JOptionPane.showConfirmDialog(this, "Do you really want to update the data?","Confirm",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                if(response==JOptionPane.YES_OPTION)
                {
                    pst=con.prepareStatement("update dbs set name=?,course=?,fees=?,mode=? where eno=?");

                    pst.setString(1,txtname.getText());
                    pst.setString(2,txtcourse.getSelectedItem().toString());
                    pst.setString(3,fees1.getText());
                    if(txtcash.isSelected()){
                        pst.setString(4,txtcash.getText());
                    }
                    else if(txtcard.isSelected()){
                        pst.setString(4, txtcard.getText());
                    }
                    else{
                        pst.setString(4,txtcheque.getText());
                    }
                    pst.setString(5,txteno.getText());
                    txtname.setEnabled(false);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Updated Successfully");
                    clearfields();
                }
                else if(response==JOptionPane.NO_OPTION){
                    String enrol=txteno.getText();
                    pst=con.prepareStatement("select eno from dbs where eno=?");
                    pst.setString(1,enrol);
                    rs=pst.executeQuery();
                }
                else if(response==JOptionPane.CLOSED_OPTION){
                    JOptionPane.showMessageDialog(this,"Data is not updated");
                    clearfields();
                    formss2 f2=new formss2();
                    f2.setVisible(true);
                    f2.pack();
                    f2.show();
                    dispose();
                }
            }
        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_txtupdateActionPerformed

    private void txtupdateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtupdateKeyPressed
        // TODO add your handling code here
        try {
            //String s = JOptionPane.showInputDialog(this,"Enter eno for search");
            int response = JOptionPane.showConfirmDialog(this, "Do you really want to update the data?","Confirm",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
            if(response==JOptionPane.YES_OPTION)
            {
                pst=con.prepareStatement("update dbs set name=?,course=?,fees=?,mode=? where eno=?");

                pst.setString(1,txtname.getText());
                pst.setString(2,txtcourse.getSelectedItem().toString());
                pst.setString(3,fees1.getText());
                if(txtcash.isSelected()){
                    pst.setString(4,txtcash.getText());
                }
                else if(txtcard.isSelected()){
                    pst.setString(4, txtcard.getText());
                }
                else{
                    pst.setString(4,txtcheque.getText());
                }
                pst.setString(5,txteno.getText());
                txtname.setEnabled(false);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Updated Successfully");
                clearfields();
            }
            else if(response==JOptionPane.NO_OPTION){
                String enrol=txteno.getText();
                pst=con.prepareStatement("select eno from dbs where eno=?");
                pst.setString(1,enrol);
                rs=pst.executeQuery();
            }
            else if(response==JOptionPane.CLOSED_OPTION){
                JOptionPane.showMessageDialog(this,"Data is not updated");
                clearfields();
                formss2 f2=new formss2();
                f2.setVisible(true);
                f2.pack();
                f2.show();
                dispose();
            }
        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_txtupdateKeyPressed

    private void txtupdateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtupdateKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtupdateKeyTyped

    private void txtupdate1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtupdate1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtupdate1FocusGained

    private void txtupdate1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtupdate1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtupdate1MouseClicked

    private void txtupdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtupdate1ActionPerformed
        // TODO add your handling code here:
        try {
            boolean b=false;
            if(txteno.getText().equals("")){
                b=false;
                JOptionPane.showMessageDialog(null,"Kindly enter the student eno");
                txteno.requestFocus();
            }
            else if(txtname.getText().equals("")){
                b=false;
                JOptionPane.showMessageDialog(null,"Kindly enter the student name");
                txtname.requestFocus();
            }
            else if(txtcourse.getSelectedItem().equals("")){
                b=false;
                JOptionPane.showMessageDialog(this,"Kindly enter the opted course");
                txtcourse.requestFocus();
            }
            else if(fees1.getText().equals("")){
                b=false;
                JOptionPane.showMessageDialog(null,"Kindly enter the fees of the opted course");
                fees1.requestFocus();
            }
            else{
                //String s = JOptionPane.showInputDialog(this,"Enter eno for search");
                int response = JOptionPane.showConfirmDialog(this, "Do you really want to update the data?","Confirm",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                if(response==JOptionPane.YES_OPTION)
                {
                    pst=con.prepareStatement("update dbs set name=?,course=?,fees=?,mode=? where eno=?");

                    pst.setString(1,txtname.getText());
                    pst.setString(2,txtcourse.getSelectedItem().toString());
                    pst.setString(3,fees1.getText());
                    if(txtcash.isSelected()){
                        pst.setString(4,txtcash.getText());
                    }
                    else if(txtcard.isSelected()){
                        pst.setString(4, txtcard.getText());
                    }
                    else{
                        pst.setString(4,txtcheque.getText());
                    }
                    pst.setString(5,txteno.getText());
                    txtname.setEnabled(false);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Updated Successfully");
                    clearfields();
                    formss2 f2=new formss2();
                    f2.setVisible(true);
                    f2.pack();
                    f2.show();
                    dispose();
                }
                else if(response==JOptionPane.NO_OPTION){
                    String enrol=txteno.getText();
                    pst=con.prepareStatement("select eno from dbs where eno=?");
                    pst.setString(1,enrol);
                    rs=pst.executeQuery();
                }
                else if(response==JOptionPane.CLOSED_OPTION){
                    JOptionPane.showMessageDialog(this,"Data is not updated");
                    clearfields();
                    formss2 f2=new formss2();
                    f2.setVisible(true);
                    f2.pack();
                    f2.show();
                    dispose();
                }
            }
        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_txtupdate1ActionPerformed

    private void txtupdate1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtupdate1KeyPressed
        // TODO add your handling code here
        try {
            //String s = JOptionPane.showInputDialog(this,"Enter eno for search");
            int response = JOptionPane.showConfirmDialog(this, "Do you really want to update the data?","Confirm",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
            if(response==JOptionPane.YES_OPTION)
            {
                pst=con.prepareStatement("update dbs set name=?,course=?,fees=?,mode=? where eno=?");

                pst.setString(1,txtname.getText());
                pst.setString(2,txtcourse.getSelectedItem().toString());
                pst.setString(3,fees1.getText());
                if(txtcash.isSelected()){
                    pst.setString(4,txtcash.getText());
                }
                else if(txtcard.isSelected()){
                    pst.setString(4, txtcard.getText());
                }
                else{
                    pst.setString(4,txtcheque.getText());
                }
                pst.setString(5,txteno.getText());
                txtname.setEnabled(false);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Updated Successfully");
                clearfields();
                formss2 f2=new formss2();
                f2.setVisible(true);
                f2.pack();
                f2.show();
                dispose();
            }
            else if(response==JOptionPane.NO_OPTION){
                String enrol=txteno.getText();
                pst=con.prepareStatement("select eno from dbs where eno=?");
                pst.setString(1,enrol);
                rs=pst.executeQuery();
            }
            else if(response==JOptionPane.CLOSED_OPTION){
                JOptionPane.showMessageDialog(this,"Data is not updated");
                clearfields();
                formss2 f2=new formss2();
                f2.setVisible(true);
                f2.pack();
                f2.show();
                dispose();
            }
        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_txtupdate1KeyPressed

    private void txtupdate1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtupdate1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtupdate1KeyTyped

    private void txtbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbackActionPerformed
        // TODO add your handling code here:
        formss2 f2=new formss2();
        f2.setVisible(true);
        f2.pack();
        f2.show();
        dispose();
    }//GEN-LAST:event_txtbackActionPerformed

    private void l3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l3MouseClicked
        // TODO add your handling code here:
        logindb1 lb=new logindb1();
        lb.setVisible(true);
        lb.pack();
        lb.show();
        dispose();
    }//GEN-LAST:event_l3MouseClicked

    private void l4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l4MouseClicked
        // TODO add your handling code here:
        logindb1 lb=new logindb1();
        lb.setVisible(true);
        lb.pack();
        lb.show();
        dispose();
    }//GEN-LAST:event_l4MouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try{
                clearfields();
                //form2_2 f22=new form2_2();
                String s = JOptionPane.showInputDialog(this,"Enter eno for search");
                //pst=con.prepareStatement("select * from dbs where eno=?");
                //pst.setString(1, s);
                //rs=pst.executeQuery();
                String enrol=txteno.getText();
                pst=con.prepareStatement("select eno from dbs where eno=?");
                pst.setString(1,s);
                rs1=pst.executeQuery();
                if(rs1.next()){
                    pst=con.prepareStatement("select * from dbs where eno=?");
                    pst.setString(1, s);
                    rs=pst.executeQuery();
                    if(rs.next()){
                        txtname.setText(rs.getString(4));
                        txteno.setText(rs.getString(5));
                        txtcourse.setSelectedItem(rs.getString(2));
                        fees1.setText(rs.getString(1));
                        String mode=rs.getString(3);
                        if(mode.equals("Cash"))
                        {
                            txtcash.setSelected(true);
                        }
                        else if(mode.equals("Card"))
                        {
                            txtcard.setSelected(true);
                        }
                        else if(mode.equals("Cheque"))
                        {
                            txtcheque.setSelected(true);
                        }
                        
                        //f22.setVisible(true);
                        txtupdate.setVisible(true);
                        //txtdelete2.setVisible(true);
                        con.close();
                        //new form2_2(eno,name,course,fee,mode).setVisible(true);

                    }
                }
                
                else if(!(rs1.next())){
                    cf();
                    //txtupdate.setVisible(false);
                    //txtdelete2.setVisible(false);
                    JOptionPane.showMessageDialog(this,"No such Data is found");
                    JOptionPane.showMessageDialog(this,"Modification is Disabled");
                    formss2 f=new formss2();
                    f.setVisible(true);
                    f.pack();
                    f.show();
                    dispose();
                }
            } catch (SQLException ex) {
            }
    }//GEN-LAST:event_formWindowOpened

    private void txtcoursePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_txtcoursePopupMenuWillBecomeInvisible
        try{                                                       
            // TODO add your handling code here:
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            con = DriverManager.getConnection("jdbc:ucanaccess://D:\\PROJECT\\Login1\\Database12.accdb");
            String item=(String) txtcourse.getSelectedItem();
            String sql2="select Course_Fees from Course_Master where Course_Name=?";
            
            try{
                pst=con.prepareStatement(sql2);
                pst.setString(1, item);
                rs=pst.executeQuery();
                
                if(rs.next()){
                    fees1.setText(rs.getString(1));
                }
            } catch (SQLException ex) {
                Logger.getLogger(forms2_2.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (SQLException ex) {
            Logger.getLogger(forms2_2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(forms2_2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtcoursePopupMenuWillBecomeInvisible

    private void fees1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fees1MousePressed
        // TODO add your handling code here:
        if(fees1.isRequestFocusEnabled()){
            JOptionPane.showMessageDialog(this,"Fees cannot be edited");
        }
    }//GEN-LAST:event_fees1MousePressed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1MouseClicked

    
    public void clearfields(){
        txtname.setText("");
        txteno.setText("");
        txtcourse.setSelectedIndex(-1);
        fees1.setText("");
        txtcash.setSelected(false);
        txtcard.setSelected(false);
        txtcheque.setSelected(false);
        txtupdate.setVisible(true);
        //txtdelete2.setVisible(true);
        
    }
    public void cf(){
        txtname.setText("");
        txteno.setText("");
        txtcourse.setSelectedIndex(0);
        fees1.setText("");
        txtcash.setSelected(true);
        txtcard.setSelected(false);
        txtcheque.setSelected(false);
        //txtsave.setVisible();
        //txtmodify.setVisible(true);
        txtupdate.setVisible(true);
        //txtdelete2.setVisible(false);
        //txtsearch.setVisible(true);
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(forms2_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(forms2_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(forms2_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(forms2_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new forms2_2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fees;
    private javax.swing.JTextField fees1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel l3;
    private javax.swing.JLabel l4;
    private javax.swing.JButton txtback;
    private javax.swing.JRadioButton txtcard;
    private javax.swing.JRadioButton txtcash;
    private javax.swing.JRadioButton txtcheque;
    private javax.swing.JLabel txtclose;
    private javax.swing.JComboBox<String> txtcourse;
    private javax.swing.JTextField txteno;
    private javax.swing.JLabel txtmin;
    private javax.swing.JTextField txtname;
    private javax.swing.JButton txtupdate;
    private javax.swing.JButton txtupdate1;
    // End of variables declaration//GEN-END:variables
}

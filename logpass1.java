/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Login;

import Login.logindb1;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.regex.*;
import java.awt.event.*;
import java.beans.Statement;
import javax.swing.Icon;
import javax.swing.JFrame;
import javax.swing.JTextField;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author jagab
 */
public class logpass1 extends javax.swing.JFrame {
    Connection con;
    ResultSet rs;
    PreparedStatement pst;
    private String OptionPane;

    /**
     * Creates new form logpass1
     */
    public logpass1() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lf = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        txtreset = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lf.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        lf.setForeground(new java.awt.Color(255, 255, 255));
        lf.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lf.setText("RESET YOUR PASSWORD");
        getContentPane().add(lf, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 1080, 43));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("New Password");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, 305, -1));

        jPasswordField1.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyTyped(evt);
            }
        });
        getContentPane().add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 240, 350, 44));

        txtreset.setBackground(new java.awt.Color(255, 204, 51));
        txtreset.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtreset.setText("Update");
        txtreset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtresetMouseClicked(evt);
            }
        });
        txtreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtresetActionPerformed(evt);
            }
        });
        getContentPane().add(txtreset, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 380, 159, 60));

        jButton1.setBackground(new java.awt.Color(255, 204, 51));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton1.setText("Quit");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 370, 170, 60));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Username");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 305, -1));

        jTextField1.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 150, 350, 50));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/login1.jpg"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 580));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            if(jPasswordField1.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Password needed to be filled");
            }
            else{
                //jPasswordField2.requestFocus();
                txtreset.requestFocus();
            }
        }
    }//GEN-LAST:event_jPasswordField1KeyPressed

    private void jPasswordField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z]{0,4}[@]{0,1}[0-9]{0,2}$";
        Pattern patt=Pattern.compile(PATTERN);
        Matcher match=patt.matcher(jPasswordField1.getText());
        if(!match.matches()){
            JOptionPane.showMessageDialog(this, "Incorrect Password Eg;shin@15");
        }
    }//GEN-LAST:event_jPasswordField1KeyReleased

    private void jPasswordField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyTyped
        // TODO add your handling code here:
        /*char c=evt.getKeyChar();
        //ISO control for edit operation(delete key and backspace key is allowed)
        if(!(Character.isLetter(c)||Character.isDigit(c)||Character.isISOControl(c))){
            JOptionPane.showMessageDialog(null,"Alphabets, special characters and numbers are required");
            getToolkit().beep();
            jTextField1.setEditable(false);
        }
        else{
            jTextField1.setEditable(true);
        }*/
    }//GEN-LAST:event_jPasswordField1KeyTyped

    private void txtresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtresetActionPerformed
        // TODO add your handling code here:
        //clearfields();
        try {
            //String s = JOptionPane.showInputDialog(this,"Enter eno for search");
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            con = DriverManager.getConnection("jdbc:ucanaccess://D:\\PROJECT\\Login1\\Database12.accdb");
            int response = JOptionPane.showConfirmDialog(this, "Do you really want to update the data?","Confirm",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
            if(response==JOptionPane.YES_OPTION)
            {
                pst=con.prepareStatement("update form set Password=? where Username=?");

                pst.setString(1,jPasswordField1.getText());
                pst.setString(2,jTextField1.getText());
                jPasswordField1.setEnabled(false);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Updated Successfully");
                clearfields();
            }
            else if(response==JOptionPane.NO_OPTION){
                String enrol=jPasswordField1.getText();
                pst=con.prepareStatement("select eno from dbs where eno=?");
                pst.setString(1,enrol);
                rs=pst.executeQuery();
            }
            else if(response==JOptionPane.CLOSED_OPTION){
                JOptionPane.showMessageDialog(this,"Data is not updated");
                clearfields();
                logpass1 lp=new logpass1();
                lp.setVisible(true);
                lp.show();
                lp.pack();
                dispose();
            }
        } catch (SQLException ex) {

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(logpass1.class.getName()).log(Level.SEVERE, null, ex);
        }
       logindb1 l=new logindb1();
       l.setVisible(true);
       l.pack();
       l.show();
       dispose();
        
    }//GEN-LAST:event_txtresetActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1MouseClicked

    private void txtresetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtresetMouseClicked
        // TODO add your handling code here:
       try {
            //String s = JOptionPane.showInputDialog(this,"Enter eno for search");
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            con = DriverManager.getConnection("jdbc:ucanaccess://D:\\PROJECT\\Login1\\Database12.accdb");
            int response = JOptionPane.showConfirmDialog(this, "Do you really want to update the data?","Confirm",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
            if(response==JOptionPane.YES_OPTION)
            {
                pst=con.prepareStatement("update form set Password=? where Username=?");

                pst.setString(1,jPasswordField1.getText());
                pst.setString(2,jTextField1.getText());
                jPasswordField1.setEnabled(false);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Updated Successfully");
                clearfields();
            }
            else if(response==JOptionPane.NO_OPTION){
                String enrol=jPasswordField1.getText();
                pst=con.prepareStatement("select eno from dbs where eno=?");
                pst.setString(1,enrol);
                rs=pst.executeQuery();
            }
            else if(response==JOptionPane.CLOSED_OPTION){
                JOptionPane.showMessageDialog(this,"Data is not updated");
                clearfields();
                logpass1 lp=new logpass1();
                lp.setVisible(true);
                lp.show();
                lp.pack();
                dispose();
            }
        } catch (SQLException ex) {

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(logpass1.class.getName()).log(Level.SEVERE, null, ex);
        }
       logindb1 l=new logindb1();
       l.setVisible(true);
       l.pack();
       l.show();
       dispose();
    }//GEN-LAST:event_txtresetMouseClicked

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            if(jTextField1.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Username needed to be filled");
            }
            else{
                jPasswordField1.requestFocus();
            }
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        //ISO control for edit operation(delete key and backspace key is allowed)
        if(!(Character.isLetter(c)||Character.isISOControl(c))){
            JOptionPane.showMessageDialog(null,"Only Alphabets are Accepted");
            getToolkit().beep();
            jTextField1.setEditable(false);
        }
        else{
            jTextField1.setEditable(true);
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        int position=jTextField1.getCaretPosition();
        jTextField1.setText(jTextField1.getText().toUpperCase());
        jTextField1.setCaretPosition(position);
    }//GEN-LAST:event_jTextField1KeyReleased

    
    public void clearfields(){
        jPasswordField1.setText("");
        //jPasswordField2.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(logpass1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(logpass1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(logpass1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(logpass1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new logpass1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lf;
    private javax.swing.JButton txtreset;
    // End of variables declaration//GEN-END:variables
}
